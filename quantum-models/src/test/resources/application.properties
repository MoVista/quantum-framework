
#---< JWT configuration > ---


#quarkus.index-dependency.smallrye-jwt.group-id=io.smallrye
#quarkus.index-dependency.smallrye-jwt.artifact-id=smallrye-jwt
quarkus.index-dependency.semver4j.group-id=org.semver4j
quarkus.index-dependency.semver4j.artifact-id=semver4j
quarkus.index-dependency.smallrye-open-api.group-id=io.smallrye
quarkus.index-dependency.smallrye-open-api.artifact-id=smallrye-open-api



#--- < MongoDB > ---
# configure the MongoDB client for a replica set of two nodes
# AWS
#quarkus.mongodb.connection-string = ${MONGODB_CONNECTION_STRING:mongodb+srv://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@${MONGODB_HOST}/${MONGODB_DATABASE}?retryWrites=true&w=majority}
quarkus.mongodb.devservices.enabled = false
quarkus.mongodb.connection-string=${MONGODB_CONNECTION_STRING:mongodb://localhost:27017/?retryWrites=false}

#Docker Container:
#quarkus.mongodb.connection-string = mongodb://mongodb_container:27017


# mandatory if you don't specify the name of the database using @MongoEntity
quarkus.mongodb.database = ${MONGODB_DEFAULT_SCHEMA:system-com}

#--- Morphia
quarkus.morphia.database=system-com
quarkus.morphia.packages=com.e2eq.framework.model.persistent.security,com.e2eq.framework.model.persistent.base,com.e2eq.framework.model.persistent.morphia,com.e2eq.framework.model.persistent.migration.base,com.e2eq.framework.persistent
quarkus.morphia.create-caps=true
quarkus.morphia.create-indexes=true
quarkus.morphia.create-validators=true

#--- < Logging > ---
quarkus.log.level=INFO
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%l] (%t) %s%e%n
#quarkus.log.handler.console."console-handlers".darken=3
quarkus.log.category."com.e2eq".level=INFO
quarkus.log.category."com.e2eq.framework.model.security.rules".level=INFO

