
#---< JWT configuration > ---


#quarkus.index-dependency.smallrye-jwt.group-id=io.smallrye
#quarkus.index-dependency.smallrye-jwt.artifact-id=smallrye-jwt

# enable Small Rye
quarkus.smallrye-jwt.enabled=true

# The public key to validate the token with
mp.jwt.verify.publickey.location=publicKey.pem

# NOT HERE --- handled in resources.json file
#quarkus.native.resources.includes=publicKey.pem


# Private signing key  unsure why this is commented out most likely because we are handling this
# in the code already some where?
#smallrye.jwt.sign.key.location=privateKey.pem
mp.jwt.verify.issuer=https://example.com/issuer
mp.jwt.verify.audiences=b2bi-api-client,b2bi-api-client-refresh

# Duration in Seconds do not go below 120 because the dialog timer is 120
com.b2bi.jwt.duration=10000
# 7200 -> 2 hours
%dev.com.b2bi.jwt.duration=7200



#---< CORS Configuration > ---
quarkus.http.header.Pragma.value=no-cache
quarkus.http.header.Pragma.methods=GET

quarkus.http.cors=true
quarkus.http.cors.origins=quarkus.http.cors.origins=${QUARKUS_HTTP_CORS_ORIGINS:http://localhost:3000,http://localhost:8080}
quarkus.http.cors.headers=accept,authentication,Authorization,content-type,x-requested-with
quarkus.http.cors.methods=GET, OPTIONS, PUT, POST, DELETE
quarkus.http.cors.access-control-allow-credentials=true


#Disable devservices for things like mongodb etc.
quarkus.s3.devservices.enabled=false

#Disable Lamda services
quarkus.lambda.mock-event-server.enabled=false

#--- < MongoDB > ---
# configure the MongoDB client for a replica set of two nodes
# AWS
#quarkus.mongodb.connection-string = ${MONGODB_CONNECTION_STRING:mongodb+srv://${MONGODB_USERNAME}:${MONGODB_PASSWORD}@${MONGODB_HOST}/${MONGODB_DATABASE}?retryWrites=true&w=majority}
quarkus.mongodb.devservices.enabled = false

# Local host
quarkus.mongodb.connection-string = mongodb://localhost:27017/?retryWrites=false

#Docker Container:
#quarkus.mongodb.connection-string = mongodb://mongodb_container:27017


# mandatory if you don't specify the name of the database using @MongoEntity
quarkus.mongodb.database = ${MONGODB_DEFAULT_SCHEMA:system-com}

#--- Morphia
quarkus.morphia.database=system-com
quarkus.morphia.packages=com.e2eq.framework.model.persistent.security,com.e2eq.framework.model.persistent.base,com.e2eq.framework.model.persistent.morphia,com.e2eq.framework.model.persistent.migration.base
quarkus.morphia.create-caps=true
quarkus.morphia.create-indexes=true
quarkus.morphia.create-validators=true



#---< Database Migrator > ---
# Controls the database migration change scripts
# will look for previous version to current
com.b2bi.database.version = 0.2
com.b2bi.database.scope = DEV
com.b2bi.database.migration.changeset.package = "com.e2eq.framework.model.persistent.morphia.changesets"
com.b2bi.database.migration.enabled = true

# -- To enable alternative DNS for native build when using mongodb.server
# quarkus.mongodb.native.dns.use-vertx-dns-resolver=true
#quarkus.native.additional-build-args = --initialize-at-run-time=com.fasterxml.jackson.datatype.jsr310.ser.InstanceSerializerBase, --initialize-at-run-time=com.fasterxml.jackson.dataformat.yaml.YAMLParser, --initialize-at-run-time=com.fasterxml.jackson.databind.deser.std.NumberDeserializers, --initialize-at-run-time=com.fasterxml.jackson.databind.deser.std.StdDeserializer, --initialize-at-run-time= software.amazon.awssdk.services.s3.internal.crt.DefaultS3CrtAsyncClient  -H:ReflectionConfigurationFiles=reflection-config.json, -H:ResourceConfigurationFiles=resources.json,  --trace-object-instantiation=com.fasterxml.jackson.databind.deser.impl.FailingDeserializer --report-unsupported-elements-at-runtime
quarkus.native.additional-build-args=--initialize-at-run-time=io.grpc.netty.shaded.io.netty.util.internal.logging.Log4J2LoggerFactory, --initialize-at-run-time=org.reflections.vfs.JbossDir, --initialize-at-run-time=org.apache.http.impl.auth.NTLMEngineImpl, --initialize-at-run-time=software.amazon.awssdk.services.s3.internal.crt.DefaultS3CrtAsyncClient, -H:ReflectionConfigurationFiles=reflection-config.json, -H:ResourceConfigurationFiles=resources.json, --report-unsupported-elements-at-runtime
quarkus.native.add-all-charsets=true
# only used for JDK 21 and above when you address the gu and polygot issues
#quarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel-builder-image:jdk-21
# use this for 17 builds
quarkus.native.builder-image=quay.io/quarkus/ubi-quarkus-mandrel-builder-image:22.3-java17

#quarkus.native.builder-image=graalbase

#--- < Logging > ---
quarkus.log.level=INFO
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%l] (%t) %s%e%n
#quarkus.log.handler.console."console-handlers".darken=3
quarkus.log.category."com.e2eq".level=INFO
quarkus.log.category."com.e2eq.framework.model.security.rules".level=INFO


#---  Open API
quarkus.swagger-ui.always-include=true
quarkus.swagger-ui.enable=true
quarkus.smallrye-openapi.security-scheme=jwt

quarkus.smallrye-openapi.info-title=Quantum API
%dev.quarkus.smallrye-openapi.info-title=Quantum (development)
%test.quarkus.smallrye-openapi.info-title=Quantum (test)
quarkus.smallrye-openapi.info-version=0.0.1
#quarkus.smallrye-openapi.info-description=
quarkus.smallrye-openapi.info-terms-of-service=See terms of service on our website.
quarkus.smallrye-openapi.info-contact-email=apisupport@end2endlogic.com
#quarkus.smallrye-openapi.info-contact-name=
quarkus.smallrye-openapi.info-contact-url=https://www.end2endlogi.com/contact
%dev.quarkus.smallrye-openapi.info-contact-url=http://localhost:8080/contact
#quarkus.smallrye-openapi.info-license-name=Apache 2.0
#quarkus.smallrye-openapi.info-license-url=https://www.apache.org/licenses/LICENSE-2.0.html

#quarkus.http.port=${PORT:8080}
#quarkus.mongodb.devservices.enabled = false
quarkus.console.color=true

# No longer needed as default is a fast-jar which is optimal for rest api's.
#quarkus.package.type=uber-jar

postmark.api-key=${POSTMARK_API_KEY}
postmark.default-from-email-address=${POSTMARK_DEFAULT_FROM_EMAIL:noreply@example.com}
postmark.default-to-email-address=${POSTMARK_DEFAULT_TO_EMAIL}

awsconfig.check-migration=true
